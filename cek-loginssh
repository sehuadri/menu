#!/bin/bash
# Script to check active SSH and OpenVPN users
# Improved version: more efficient and robust

# --- Colors and Initialization ---
clear
RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'

# --- Log File Detection ---
# Find the correct authentication log file automatically
if [ -f "/var/log/auth.log" ]; then
    LOG_FILE="/var/log/auth.log"
elif [ -f "/var/log/secure" ]; then
    LOG_FILE="/var/log/secure"
else
    echo -e "${RED}Error: Tidak dapat menemukan file log /var/log/auth.log atau /var/log/secure.${NC}"
    exit 1
fi

# --- Function for Table Headers ---
print_header() {
    echo -e "${CYAN}-----------------------------------------------------${NC}"
    echo -e "${CYAN} PID          | Username          | IP Address${NC}"
    echo -e "${CYAN}-----------------------------------------------------${NC}"
}

print_vpn_header() {
    echo -e "${CYAN}-----------------------------------------------------${NC}"
    echo -e "${CYAN} Username          | IP Address        | Connected Since${NC}"
    echo -e "${CYAN}-----------------------------------------------------${NC}"
}

# --- Dropbear Users ---
echo ""
echo -e "${GREEN}=======[ LIST PENGGUNA DROPBEAR ]========${NC}"
print_header
# Use pgrep for reliability and process inside a single loop
# Avoids temporary files and is much faster
for PID in $(pgrep -f dropbear); do
    LOGIN_INFO=$(grep "Password auth succeeded" "$LOG_FILE" | grep "dropbear\[$PID\]")
    if [[ ! -z "$LOGIN_INFO" ]]; then
        USER=$(echo "$LOGIN_INFO" | awk '{print $10}' | tr -d "'")
        IP=$(echo "$LOGIN_INFO" | awk '{print $12}' | tr -d "'")
        printf " %-12s | %-17s | %s\n" "$PID" "$USER" "$IP"
    fi
done
echo -e "${CYAN}-----------------------------------------------------${NC}"


# --- OpenSSH (sshd) Users ---
echo ""
echo -e "${GREEN}========[ LIST PENGGUNA OPENSSH ]=========${NC}"
print_header
# Same logic as Dropbear: pgrep is better than ps aux | grep
for PID in $(pgrep -f sshd); do
    LOGIN_INFO=$(grep "Accepted password for" "$LOG_FILE" | grep "sshd\[$PID\]")
    if [[ ! -z "$LOGIN_INFO" ]]; then
        USER=$(echo "$LOGIN_INFO" | awk '{print $9}')
        IP=$(echo "$LOGIN_INFO" | awk '{print $11}')
        printf " %-12s | %-17s | %s\n" "$PID" "$USER" "$IP"
    fi
done
echo -e "${CYAN}-----------------------------------------------------${NC}"


# --- OpenVPN Users (TCP) ---
OVPN_TCP_LOG="/etc/openvpn/server/openvpn-tcp.log"
if [ -f "$OVPN_TCP_LOG" ]; then
    echo ""
    echo -e "${GREEN}=======[ LIST PENGGUNA OPENVPN TCP ]========${NC}"
    print_vpn_header
    # Process the log file directly without temporary files
    grep "^CLIENT_LIST" "$OVPN_TCP_LOG" | while read -r line; do
        # Use awk for clean column formatting
        echo "$line" | awk -F',' '{printf " %-17s | %-17s | %s\n", $2, $3, $8}'
    done
    echo -e "${CYAN}-----------------------------------------------------${NC}"
fi


# --- OpenVPN Users (UDP) ---
OVPN_UDP_LOG="/etc/openvpn/server/openvpn-udp.log"
if [ -f "$OVPN_UDP_LOG" ]; then
    echo ""
    echo -e "${GREEN}=======[ LIST PENGGUNA OPENVPN UDP ]========${NC}"
    print_vpn_header
    # Same efficient processing for UDP
    grep "^CLIENT_LIST" "$OVPN_UDP_LOG" | while read -r line; do
        echo "$line" | awk -F',' '{printf " %-17s | %-17s | %s\n", $2, $3, $8}'
    done
    echo -e "${CYAN}-----------------------------------------------------${NC}"
fi


# --- Footer ---
echo ""
echo ""
read -n 1 -s -r -p "Tekan tombol apa saja untuk kembali ke menu..."
m-ssh # This command calls your menu script
